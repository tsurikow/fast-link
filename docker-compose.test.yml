services:
   redis-test:
      image: redis:7-alpine
      restart: always
      env_file: .env.test
      ports:
         - "${REDIS_PORT}:${REDIS_PORT}"
      expose:
         - "${REDIS_PORT}"
      volumes:
         - redis-test-data:${REDIS_DATA}
      command: [ "--requirepass", "${REDIS_PASSWORD}" ]

   postgres-test:
      image: postgres:17-alpine
      restart: always
      env_file: .env.test
      environment:
         POSTGRES_PASSWORD: test_password
         POSTGRES_USER: test_user
         POSTGRES_DB: test_db
         PGDATA: /var/lib/postgresql/test_data
      ports:
         - "${POSTGRES_PORT}:${POSTGRES_PORT}"
      expose:
         - "${POSTGRES_PORT}"
      volumes:
         - postgres-test-data:/var/lib/postgresql/test_data

   fastapi-test:
      build:
         context: .
         dockerfile: backend/Dockerfile
      restart: always
      env_file: .env.test
      depends_on:
         tests:
            condition: service_completed_successfully
         redis-test:
            condition: service_started
         postgres-test:
            condition: service_started
      ports:
         - "${FASTAPI_PORT}:${FASTAPI_PORT}"
      command: /app/backend/scripts/entrypoint.sh

   tests:
      build:
         context: .
         dockerfile: backend/Dockerfiletest
      env_file: .env.test
      environment:
         - ENV_FILE=.env.test
      depends_on:
         - postgres-test
         - redis-test
      volumes:
         - ./reports:/app/reports
      command: /app/backend/scripts/entrypoint.test.sh

   locust:
      image: locustio/locust
      depends_on:
         - fastapi-test
         - postgres-test
         - redis-test
      ports:
         - "8089:8089"
      environment:
         - FASTAPI_HOST=fastapi-test
         - FASTAPI_PORT=${FASTAPI_PORT}
      volumes:
         - ./tests:/tests
         - ./reports:/app/reports
      command: -f /tests/locustfile.py --host=http://fastapi-test:${FASTAPI_PORT}

volumes:
   redis-test-data:
   postgres-test-data: