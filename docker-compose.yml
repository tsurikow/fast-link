services:
   redis:
      image: redis:7-alpine
      restart: always
      env_file: .env
      ports:
         - "${REDIS_PORT}:${REDIS_PORT}"
      expose:
         - "${REDIS_PORT}"
      volumes:
         - redis-data:${REDIS_DATA}
      command: [ "--requirepass", "${REDIS_PASSWORD}" ]

   postgres:
      image: postgres:17-alpine
      restart: always
      env_file: .env
      environment:
         POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
         POSTGRES_USER: ${POSTGRES_USER}
         POSTGRES_DB: ${POSTGRES_DB}
         PGDATA: ${POSTGRES_DATA}
      ports:
         - "${POSTGRES_PORT}:${POSTGRES_PORT}"
      expose:
         - "${POSTGRES_PORT}"
      volumes:
         - postgres-data:${POSTGRES_DATA}

   fastapi:
      build:
         context: .
         dockerfile: backend/Dockerfile
      restart: always
      env_file: .env
      depends_on:
         - redis
         - postgres
      ports:
         - "${FASTAPI_PORT}:${FASTAPI_PORT}"
      command: /app/backend/scripts/entrypoint.sh

   streamlit:
      build:
         context: .
         dockerfile: frontend/Dockerfile
      restart: always
      env_file: .env
      depends_on:
         - fastapi
      ports:
         - "${STREAMLIT_PORT}:${STREAMLIT_PORT}"
      command: streamlit run frontend/app.py --server.port ${STREAMLIT_PORT}

volumes:
   redis-data:
   postgres-data: